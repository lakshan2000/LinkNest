{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\React\\\\LinkNest\\\\frontend\\\\src\\\\component\\\\widgets\\\\PostsWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPosts } from '../../state';\nimport PostWidget from './PostWidget';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsWidget = ({\n  userId,\n  isProfile = false\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts) || [];\n  const token = useSelector(state => state.token);\n  const getPosts = async () => {\n    try {\n      const res = await fetch(\"http://localhost:3001/posts\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        if (Array.isArray(data)) {\n          dispatch(setPosts({\n            posts: data\n          }));\n        } else {\n          console.error(\"Expected an array of posts, but got:\", data);\n          dispatch(setPosts({\n            posts: []\n          }));\n        }\n      } else {\n        console.error(\"Error fetching posts:\", res.statusText);\n        dispatch(setPosts({\n          posts: []\n        }));\n      }\n    } catch (error) {\n      console.error(\"Network error:\", error);\n      dispatch(setPosts({\n        posts: []\n      }));\n    }\n  };\n  const getUserPosts = async () => {\n    try {\n      const res = await fetch(`http://localhost:3001/posts/${userId}/posts`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        if (Array.isArray(data)) {\n          dispatch(setPosts({\n            posts: data\n          }));\n        } else {\n          console.error(\"Expected an array of user posts, but got:\", data);\n          dispatch(setPosts({\n            posts: []\n          }));\n        }\n      } else {\n        console.error(\"Error fetching user posts:\", res.statusText);\n        dispatch(setPosts({\n          posts: []\n        }));\n      }\n    } catch (error) {\n      console.error(\"Network error:\", error);\n      dispatch(setPosts({\n        posts: []\n      }));\n    }\n  };\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, [isProfile, userId, token, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(PostWidget, {\n      postId: post._id,\n      postUserId: post.userId,\n      name: `${post.firstName} ${post.lastName}`,\n      description: post.description,\n      location: post.location,\n      picturePath: post.picturePath,\n      userPicturePath: post.userPicturePath,\n      likes: post.likes,\n      comments: post.comments\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(PostsWidget, \"2gaw19B4rdI77E0+VN20763SoBI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostsWidget;\nexport default PostsWidget;\nvar _c;\n$RefreshReg$(_c, \"PostsWidget\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","setPosts","PostWidget","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsWidget","userId","isProfile","_s","dispatch","posts","state","token","getPosts","res","fetch","method","headers","Authorization","ok","data","json","Array","isArray","console","error","statusText","getUserPosts","children","length","map","post","postId","_id","postUserId","name","firstName","lastName","description","location","picturePath","userPicturePath","likes","comments","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Desktop/React/LinkNest/frontend/src/component/widgets/PostsWidget.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setPosts } from '../../state';\r\nimport PostWidget from './PostWidget';\r\n\r\nconst PostsWidget = ({ userId, isProfile = false }) => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector((state) => state.posts) || [];\r\n    const token = useSelector((state) => state.token);\r\n\r\n    const getPosts = async () => {\r\n        try {\r\n            const res = await fetch(\"http://localhost:3001/posts\", {\r\n                method: \"GET\",\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            if (res.ok) {\r\n                const data = await res.json();\r\n                if (Array.isArray(data)) {\r\n                    dispatch(setPosts({ posts: data }));\r\n                } else {\r\n                    console.error(\"Expected an array of posts, but got:\", data);\r\n                    dispatch(setPosts({ posts: [] }));\r\n                }\r\n            } else {\r\n                console.error(\"Error fetching posts:\", res.statusText);\r\n                dispatch(setPosts({ posts: [] }));\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Network error:\", error);\r\n            dispatch(setPosts({ posts: [] }));\r\n        }\r\n    }\r\n\r\n    const getUserPosts = async () => {\r\n        try {\r\n            const res = await fetch(`http://localhost:3001/posts/${userId}/posts`, {\r\n                method: \"GET\",\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            if (res.ok) {\r\n                const data = await res.json();\r\n                if (Array.isArray(data)) {\r\n                    dispatch(setPosts({ posts: data }));\r\n                } else {\r\n                    console.error(\"Expected an array of user posts, but got:\", data);\r\n                    dispatch(setPosts({ posts: [] }));\r\n                }\r\n            } else {\r\n                console.error(\"Error fetching user posts:\", res.statusText);\r\n                dispatch(setPosts({ posts: [] }));\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Network error:\", error);\r\n            dispatch(setPosts({ posts: [] }));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isProfile) {\r\n            getUserPosts();\r\n        } else {\r\n            getPosts();\r\n        }\r\n    }, [isProfile, userId, token, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            {posts.length > 0 ? (\r\n                posts.map((post) => (\r\n                    <PostWidget\r\n                        key={post._id}\r\n                        postId={post._id}\r\n                        postUserId={post.userId}\r\n                        name={`${post.firstName} ${post.lastName}`}\r\n                        description={post.description}\r\n                        location={post.location}\r\n                        picturePath={post.picturePath}\r\n                        userPicturePath={post.userPicturePath}\r\n                        likes={post.likes}\r\n                        comments={post.comments}\r\n                    />\r\n                ))\r\n            ) : (\r\n                <p>No posts available</p>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostsWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
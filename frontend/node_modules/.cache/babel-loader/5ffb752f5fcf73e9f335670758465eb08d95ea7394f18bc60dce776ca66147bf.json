{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  mode: \"light\",\n  user: null,\n  token: null,\n  posts: []\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setMode: state => {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n    },\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.token = null;\n    },\n    setFriends: (state, action) => {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.error(\"User Friends non exist!!!\");\n      }\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload.posts;\n    },\n    setPost: (state, action) => {\n      const updatedPost = state.posts.map(post => {\n        if (post._id === action.payload.post._id) return action.payload.post;\n        return post;\n      });\n      state.posts = updatedPost;\n    }\n  }\n});\nexport const {\n  setMode,\n  setLogin,\n  setLogout,\n  setFriends,\n  setPosts,\n  setPost\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","token","posts","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setFriends","friends","console","error","setPosts","setPost","updatedPost","map","post","_id","actions","reducer"],"sources":["D:/Desktop/React/LinkNest/frontend/src/state/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState= {\r\n    mode : \"light\",\r\n    user: null,\r\n    token: null,\r\n    posts: [],\r\n}\r\n\r\nexport const authSlice= createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        setMode: (state)=> {\r\n            state.mode= state.mode === \"light\" ? \"dark\" : \"light\";\r\n        },\r\n        setLogin: (state, action) => {\r\n            state.user= action.payload.user;\r\n            state.token= action.payload.token;\r\n        },\r\n        setLogout: (state) => {\r\n            state.user= null;\r\n            state.token = null;\r\n        },\r\n        setFriends: (state, action) => {\r\n            if (state.user){\r\n                state.user.friends= action.payload.friends;\r\n            }else{\r\n                console.error(\"User Friends non exist!!!\")\r\n            }\r\n        },\r\n        setPosts: (state, action) => {\r\n            state.posts= action.payload.posts;\r\n        },\r\n        setPost: (state, action) => {\r\n            const updatedPost= state.posts.map((post) => {\r\n                if(post._id === action.payload.post._id) \r\n                    return action.payload.post;\r\n                return post;\r\n            });\r\n            state.posts = updatedPost;\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const { setMode, setLogin, setLogout, setFriends, setPosts, setPost} = authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAE;EAChBC,IAAI,EAAG,OAAO;EACdC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAEN,WAAW,CAAC;EAChCO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACNC,OAAO,EAAGC,KAAK,IAAI;MACfA,KAAK,CAACR,IAAI,GAAEQ,KAAK,CAACR,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACzD,CAAC;IACDS,QAAQ,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzBF,KAAK,CAACP,IAAI,GAAES,MAAM,CAACC,OAAO,CAACV,IAAI;MAC/BO,KAAK,CAACN,KAAK,GAAEQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACrC,CAAC;IACDU,SAAS,EAAGJ,KAAK,IAAK;MAClBA,KAAK,CAACP,IAAI,GAAE,IAAI;MAChBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACtB,CAAC;IACDW,UAAU,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC3B,IAAIF,KAAK,CAACP,IAAI,EAAC;QACXO,KAAK,CAACP,IAAI,CAACa,OAAO,GAAEJ,MAAM,CAACC,OAAO,CAACG,OAAO;MAC9C,CAAC,MAAI;QACDC,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACJ,CAAC;IACDC,QAAQ,EAAEA,CAACT,KAAK,EAAEE,MAAM,KAAK;MACzBF,KAAK,CAACL,KAAK,GAAEO,MAAM,CAACC,OAAO,CAACR,KAAK;IACrC,CAAC;IACDe,OAAO,EAAEA,CAACV,KAAK,EAAEE,MAAM,KAAK;MACxB,MAAMS,WAAW,GAAEX,KAAK,CAACL,KAAK,CAACiB,GAAG,CAAEC,IAAI,IAAK;QACzC,IAAGA,IAAI,CAACC,GAAG,KAAKZ,MAAM,CAACC,OAAO,CAACU,IAAI,CAACC,GAAG,EACnC,OAAOZ,MAAM,CAACC,OAAO,CAACU,IAAI;QAC9B,OAAOA,IAAI;MACf,CAAC,CAAC;MACFb,KAAK,CAACL,KAAK,GAAGgB,WAAW;IAC7B;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEZ,OAAO;EAAEE,QAAQ;EAAEG,SAAS;EAAEC,UAAU;EAAEI,QAAQ;EAAEC;AAAO,CAAC,GAAGd,SAAS,CAACmB,OAAO;AAC/F,eAAenB,SAAS,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
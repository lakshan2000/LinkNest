{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\React\\\\LinkNest\\\\frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport { Box, useMediaQuery } from '@mui/material';\nimport React, { useState } from 'react';\nimport Navbar from '../component/Navbar.js';\nimport UserWidgets from '../component/widgets/UserWidget.js';\nimport { useSelector } from 'react-redux';\nimport MyPostWidget from '../component/widgets/MyPostWidget.js';\nimport PostsWidget from '../component/widgets/PostsWidget.js';\nimport AdvertWidget from '../component/widgets/AdvertWidget.js';\nimport FriendLIstWidget from '../component/widgets/FriendLIstWidget.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const isNonMobileScreens = useMediaQuery(\"(min-width: 1000px)\");\n  const {\n    _id,\n    picturePath\n  } = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      padding: \"2rem 6%\",\n      display: isNonMobileScreens ? \"flex\" : \"block\",\n      gap: \"0.5rem\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        flexBasis: isNonMobileScreens ? \"26%\" : undefined,\n        children: /*#__PURE__*/_jsxDEV(UserWidgets, {\n          userId: _id,\n          picturePath: picturePath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flexBasis: isNonMobileScreens ? \"42%\" : undefined,\n        ml: isNonMobileScreens ? undefined : \"2rem\",\n        children: [/*#__PURE__*/_jsxDEV(MyPostWidget, {\n          picturePath: picturePath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostsWidget, {\n          userId: _id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), isNonMobileScreens && /*#__PURE__*/_jsxDEV(Box, {\n        flexBasis: \"26%\",\n        children: [/*#__PURE__*/_jsxDEV(AdvertWidget, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          m: \"2rem 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FriendLIstWidget, {\n          userId: _id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"am88mdvnoQiZZOA3dOj/JUA7l/Q=\", false, function () {\n  return [useMediaQuery, useSelector];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["Box","useMediaQuery","React","useState","Navbar","UserWidgets","useSelector","MyPostWidget","PostsWidget","AdvertWidget","FriendLIstWidget","jsxDEV","_jsxDEV","HomePage","_s","isNonMobileScreens","_id","picturePath","state","user","children","fileName","_jsxFileName","lineNumber","columnNumber","width","padding","display","gap","justifyContent","flexBasis","undefined","userId","ml","m","_c","$RefreshReg$"],"sources":["D:/Desktop/React/LinkNest/frontend/src/pages/HomePage.js"],"sourcesContent":["import { Box,useMediaQuery} from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport Navbar from '../component/Navbar.js'\r\nimport UserWidgets from '../component/widgets/UserWidget.js';\r\nimport { useSelector } from 'react-redux';\r\nimport MyPostWidget from '../component/widgets/MyPostWidget.js';\r\nimport PostsWidget from '../component/widgets/PostsWidget.js';\r\nimport AdvertWidget from '../component/widgets/AdvertWidget.js';\r\nimport FriendLIstWidget from '../component/widgets/FriendLIstWidget.js';\r\n\r\nconst HomePage = () => {\r\n  const isNonMobileScreens = useMediaQuery(\"(min-width: 1000px)\");\r\n  const { _id, picturePath} = useSelector((state) => state.user)\r\n\r\n  return (\r\n    <Box>\r\n      <Navbar/>\r\n      <Box\r\n        width= \"100%\"\r\n        padding= \"2rem 6%\"\r\n        display= {isNonMobileScreens ? \"flex\" : \"block\"}\r\n        gap= \"0.5rem\"\r\n        justifyContent= \"space-between\"\r\n      >\r\n        <Box flexBasis= {isNonMobileScreens ? \"26%\" : undefined}>\r\n          <UserWidgets userId= {_id} picturePath= {picturePath}/>\r\n        </Box>\r\n\r\n        <Box \r\n          flexBasis= {isNonMobileScreens ? \"42%\" : undefined}\r\n          ml= {isNonMobileScreens ? undefined : \"2rem\"}\r\n        >\r\n          <MyPostWidget picturePath= {picturePath}/>\r\n          <PostsWidget userId= {_id}/>\r\n        </Box>\r\n\r\n        {isNonMobileScreens && ( \r\n          <Box flexBasis= \"26%\" >\r\n            <AdvertWidget/>\r\n            <Box m= \"2rem 0\" />\r\n            <FriendLIstWidget userId= {_id} />\r\n          </Box>\r\n        )}\r\n\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default HomePage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}